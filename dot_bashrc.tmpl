# ~/.bashrc: executed by bash(1) for non-login shells.

# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

if [ -f /etc/bashrc ]; then
  source /etc/bashrc
fi

export TZ='America/New_York'

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# directory colors
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

export EDITOR=nvim
export TERM=screen-256color
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export MANROFFOPT="-c"

# TODO: source github token file

# FPP
export FPP_EDITOR="nvim"

# FZF
export FZF_DEFAULT_COMMAND='fdfind --type f --hidden --follow --exclude .git --exclude node_modules'
export FZF_COMPLETION_TRIGGERS='**'
export FZF_COMPLETION_OPTS='+c -x'
export FZF_TMUX_OPTIONS='-p 50'
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
export FZF_DEFAULT_OPTS=' --color=bg+:#3c3836,bg:#32302f,spinner:#fb4934,hl:#928374,fg:#ebdbb2,header:#928374,info:#8ec07c,pointer:#fb4934,marker:#fb4934,fg+:#ebdbb2,prompt:#fb4934,hl+:#fb4934'

# pls - todo cli app
export PLS_ERROR_LINE_STYLE="#fb4934"
export PLS_ERROR_TEXT_STYLE="#cc241d bold"

export PLS_WARNING_LINE_STYLE="#d79921"
export PLS_WARNING_TEXT_STYLE="#d79921 bold"

export PLS_UPDATE_LINE_STYLE="#b8bb26"
export PLS_UPDATE_TEXT_STYLE="#b8bb26 bold"

export PLS_INSERT_DELETE_LINE_STYLE="#b16286"

export PLS_INSERT_DELETE_TEXT_STYLE="#ebdbb2"

export PLS_MSG_PENDING_STYLE="#b8bb26"
export PLS_TABLE_HEADER_STYLE="#d3869b"
export PLS_TASK_DONE_STYLE="#ebdbb2"
export PLS_TASK_PENDING_STYLE="#b16286"
export PLS_HEADER_GREETINGS_STYLE="#d79921"
export PLS_QUOTE_STYLE="#ebdbb2"
export PLS_AUTHOR_STYLE="#ebdbb2"

export PLS_BACKGROUND_BAR_STYLE="bar.back"
export PLS_COMPLETE_BAR_STYLE="bar.complete"
export PLS_FINISHED_BAR_STYLE="bar.finished"

# pyenv
PYENV_ROOT=/alt/.pyenv

# AWS
export TF_USER_ACCESS_LEVEL=privileged

# Volta (NodeJS manager)
if [[ ! -d /alt/.volta ]]; then
  mkdir /alt/.volta
  ln -fs /alt/.volta ~/.volta
fi

export VOLTA_HOME=/alt/.volta

# vim mode ftw
set -o vi
# Remap caps-lock -> ctrl
setxkbmap -layout us -option ctrl:nocaps 2>/dev/null

# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# langs
export GOPATH=/alt/.local/lib/go
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-17.0.12.0.7-2.el8.x86_64

if [ -f "$HOME/.cargo/env" ]; then
  # shellcheck source={{ .chezmoi.homeDir }}/.cargo/env
  source "$HOME/.cargo/env"
fi

rust_root="$(rustc --print sysroot)"
export RUST_SRC_PATH="${rust_root}/lib/rustlib/src/rust/src"
[ -f "{{ .chezmoi.homeDir }}/.ghcup/env" ] && . "{{ .chezmoi.homeDir }}/.ghcup/env" # ghcup-env

# PATH
PATH=$HOME/bin:$PATH
PATH=$HOME/.local/bin:$PATH
PATH=$HOME/.cargo/bin:$PATH
PATH=$HOME/.fzf/bin:$PATH
PATH=$GOPATH/bin:$PATH
PATH=/snap/bin:$PATH
PATH=/alt/.local/nvim/bin/:$PATH
PATH=${KREW_ROOT:-$HOME/.krew}/bin:$PATH
PATH=$VOLTA_HOME/bin:$PATH
[[ -d $PYENV_ROOT/bin ]] && PATH=$PYENV_ROOT/bin:$PATH

# Forge workstation bashrc convention
for bashrc in $(find "${HOME}/etc/bashrc.d/" -name "*.bashrc" | sort); do
  # shellcheck source=/dev/null
  source "${bashrc}"
done

for bashrc in $(find "${HOME}/.config/bashrc.d/" -name "*.sh" | sort); do
  # shellcheck source=/dev/null
  source "${bashrc}"
done

eval "$(pyenv init -)"
eval "$(starship init bash)"
eval "$(zoxide init bash)"
eval "$(thefuck --alias)"
eval "$(~/.rbenv/bin/rbenv init -)"
eval "$(fzf --bash)"
unset TMOUT
